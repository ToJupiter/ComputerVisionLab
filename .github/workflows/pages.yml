# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Latest deployment 2

on:
  push:
    branches: ["main"]
    paths:
      - "docs/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    # REMOVED the defaults working-directory as it can sometimes interfere
    # with how bundle exec finds the correct gem paths set by setup-ruby.
    # We will manage working directories per step explicitly where needed.
    # defaults:
    #   run:
    #     working-directory: docs
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        # Checks out repository at the root directory

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file, but good to specify
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
          # Explicitly set the working directory for the bundle install command
          # performed by this action. This ensures gems are installed relative
          # to the Gemfile in the docs directory.
          working-directory: docs

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        # This action typically runs at the repository root

      - name: Build with Jekyll
        # Explicitly set the working directory for this run step.
        # This ensures bundle exec is run from the same directory where
        # bundle install was executed by the setup-ruby action, allowing
        # it to find the installed Jekyll gem.
        working-directory: docs
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
        # Jekyll outputs to ./_site relative to the current working directory (docs)

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        # The path here must be relative to the repository root.
        # Since Jekyll built into 'docs/_site' when the CWD was 'docs',
        # the artifact is located at 'docs/_site' from the repository root.
        with:
          path: docs/_site/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4